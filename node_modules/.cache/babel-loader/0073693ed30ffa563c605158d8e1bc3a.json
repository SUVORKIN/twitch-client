{"remainingRequest":"/Users/andreysuvorkin/Documents/GitHub/twich-client/node_modules/babel-loader/lib/index.js!/Users/andreysuvorkin/Documents/GitHub/twich-client/node_modules/eslint-loader/index.js??ref--13-0!/Users/andreysuvorkin/Documents/GitHub/twich-client/src/store.js","dependencies":[{"path":"/Users/andreysuvorkin/Documents/GitHub/twich-client/src/store.js","mtime":1534704140440},{"path":"/Users/andreysuvorkin/Documents/GitHub/twich-client/node_modules/cache-loader/dist/cjs.js","mtime":1534089081794},{"path":"/Users/andreysuvorkin/Documents/GitHub/twich-client/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/andreysuvorkin/Documents/GitHub/twich-client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport jsonp from 'jsonp';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    topGames: null,\n    streams: null,\n    loading: false,\n    error: false\n  },\n  mutations: {\n    set: function set(state, _ref) {\n      var type = _ref.type,\n          items = _ref.items;\n      state[type] = items;\n    }\n  },\n  actions: {\n    getTopGames: function getTopGames(_ref2) {\n      var _this = this;\n\n      var commit = _ref2.commit;\n      this.state.loading = true;\n      var url = 'https://api.twitch.tv/kraken/games/top?client_id=hx1afwpum43ryzd11oq6r0dh8msk38';\n      jsonp(url, function (error, response) {\n        if (error) {\n          throw error;\n        }\n\n        var topGames = response;\n        commit('set', {\n          type: 'topGames',\n          items: topGames\n        });\n        _this.state.loading = false;\n      });\n    },\n    getStreams: function getStreams(_ref3, game) {\n      var _this2 = this;\n\n      var commit = _ref3.commit;\n      this.state.loading = true;\n      var url = 'https://api.twitch.tv/kraken/streams/?client_id=hx1afwpum43ryzd11oq6r0dh8msk38&game=' + game;\n      jsonp(url, function (error, response) {\n        if (error) {\n          throw error;\n        }\n\n        var streams = response;\n\n        if (response.streams.length) {\n          commit('set', {\n            type: 'streams',\n            items: streams\n          });\n          _this2.state.loading = false;\n        } else {\n          _this2.state.error = true;\n        }\n      });\n    }\n  }\n});",{"version":3,"sources":["src/store.js"],"names":["Vue","Vuex","jsonp","use","Store","state","topGames","streams","loading","error","mutations","set","type","items","actions","getTopGames","commit","url","response","getStreams","game","length"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAF,IAAIG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,KAAKG,KAAT,CAAe;AAC5BC,SAAO;AACLC,cAAU,IADL;AAELC,aAAS,IAFJ;AAGLC,aAAS,KAHJ;AAILC,WAAO;AAJF,GADqB;AAO5BC,aAAW;AACTC,OADS,eACJN,KADI,QACkB;AAAA,UAAdO,IAAc,QAAdA,IAAc;AAAA,UAARC,KAAQ,QAARA,KAAQ;AACzBR,YAAMO,IAAN,IAAcC,KAAd;AACD;AAHQ,GAPiB;AAY5BC,WAAS;AACPC,eADO,8BACgB;AAAA;;AAAA,UAATC,MAAS,SAATA,MAAS;AACrB,WAAKX,KAAL,CAAWG,OAAX,GAAqB,IAArB;AACA,UAAMS,MAAM,iFAAZ;AACAf,YAAMe,GAAN,EAAW,UAACR,KAAD,EAAQS,QAAR,EAAqB;AAC9B,YAAIT,KAAJ,EAAW;AACT,gBAAMA,KAAN;AACD;;AACD,YAAMH,WAAWY,QAAjB;AACAF,eAAO,KAAP,EAAc;AAACJ,gBAAM,UAAP;AAAmBC,iBAAOP;AAA1B,SAAd;AACA,cAAKD,KAAL,CAAWG,OAAX,GAAqB,KAArB;AACD,OAPD;AAQD,KAZM;AAaPW,cAbO,6BAaeC,IAbf,EAaqB;AAAA;;AAAA,UAAfJ,MAAe,SAAfA,MAAe;AAC1B,WAAKX,KAAL,CAAWG,OAAX,GAAqB,IAArB;AACA,UAAMS,MAAM,yFAAyFG,IAArG;AACAlB,YAAMe,GAAN,EAAW,UAACR,KAAD,EAAQS,QAAR,EAAqB;AAC9B,YAAIT,KAAJ,EAAW;AACT,gBAAMA,KAAN;AACD;;AACD,YAAMF,UAAUW,QAAhB;;AACA,YAAIA,SAASX,OAAT,CAAiBc,MAArB,EAA6B;AAC3BL,iBAAO,KAAP,EAAc;AAACJ,kBAAM,SAAP;AAAkBC,mBAAON;AAAzB,WAAd;AACA,iBAAKF,KAAL,CAAWG,OAAX,GAAqB,KAArB;AACD,SAHD,MAGO;AACL,iBAAKH,KAAL,CAAWI,KAAX,GAAmB,IAAnB;AACD;AACF,OAXD;AAYD;AA5BM;AAZmB,CAAf,CAAf","sourceRoot":"/Users/andreysuvorkin/Documents/GitHub/twich-client","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport jsonp from 'jsonp'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    topGames: null,\n    streams: null,\n    loading: false,\n    error: false\n  },\n  mutations: {\n    set (state, {type, items}) {\n      state[type] = items\n    }\n  },\n  actions: {\n    getTopGames ({commit}) {\n      this.state.loading = true\n      const url = 'https://api.twitch.tv/kraken/games/top?client_id=hx1afwpum43ryzd11oq6r0dh8msk38'\n      jsonp(url, (error, response) => {\n        if (error) {\n          throw error\n        }\n        const topGames = response\n        commit('set', {type: 'topGames', items: topGames})\n        this.state.loading = false\n      })\n    },\n    getStreams ({commit}, game) {\n      this.state.loading = true\n      const url = 'https://api.twitch.tv/kraken/streams/?client_id=hx1afwpum43ryzd11oq6r0dh8msk38&game=' + game\n      jsonp(url, (error, response) => {\n        if (error) {\n          throw error\n        }\n        const streams = response\n        if (response.streams.length) {\n          commit('set', {type: 'streams', items: streams})\n          this.state.loading = false\n        } else {\n          this.state.error = true\n        }\n      })\n    }\n  }\n})\n"]}]}